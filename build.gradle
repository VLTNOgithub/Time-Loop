plugins {
	id 'fabric-loom' version '1.9-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.mod_group

base {
	archivesName = project.mod_jar_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	
}

processResources {
	inputs.property "version", project.version
	
	var replaceProperties = [
			"mod_id": mod_id,
			"mod_version": mod_version,
			"mod_name": mod_name,
			"mod_description": mod_description,
			"mod_author_1": mod_author_1,
			"mod_author_2": mod_author_2,
			"mod_homepage": mod_homepage,
			"mod_source": mod_source,
			"mod_issues": mod_issues,
			"mod_license": mod_license,
			"mod_mocap_version": mod_mocap_version,
			
			"mod_group": mod_group,
			"mod_jar_name": mod_jar_name,
	]
	
	filesMatching("fabric.mod.json") {
		expand replaceProperties
	}
	inputs.properties replaceProperties
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

task openBuildDir {
	doLast {
		def buildDir = file("${layout.buildDirectory.get().asFile.absolutePath}/libs").absolutePath
		if (System.properties['os.name'].toString().toLowerCase().contains('windows')) {
			def command = ['explorer', buildDir]
			new ProcessBuilder(command).start()
		} else {
			println "Skipping openBuildDir task as it is not running on Windows."
		}
	}
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
	exclude "assets/time-loop/icon.psd"
	finalizedBy openBuildDir
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = mod_jar_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
